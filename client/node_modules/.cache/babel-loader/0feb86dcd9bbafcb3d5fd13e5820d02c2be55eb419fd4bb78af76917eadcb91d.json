{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaac\\\\Desktop\\\\mern_stuff\\\\client\\\\src\\\\components\\\\recordList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Record = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.position\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.level\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-link\",\n      to: `/edit/${props.record._id}`,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link\",\n      onClick: props.deleteRecord,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n_c = Record;\nexport default function RecordList() {\n  _s();\n  const [records, setRecords] = useState([]);\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      try {\n        const response = await fetch(`http://localhost:5000/record/`, {\n          timeout: 10000 // 10 seconds\n        });\n\n        if (!response.ok) {\n          const message = `An error occurred: ${response.statusText}`;\n          window.alert(message);\n          console.log(\"Something is wrong if it's coming here\");\n          return;\n        }\n        console.log(\"Now attempting to await response.json\");\n        const records = await response.json();\n        console.log(\"Fetched records:\", records);\n        setRecords(records);\n      } catch (error) {\n        console.error(\"Request timed out or failed:\", error);\n        window.alert(\"Request timed out or failed. Please try again later.\");\n      }\n    }\n    getRecords();\n  }, []); // Empty dependency array to run this effect once when the component mounts\n\n  // This method will delete a record\n  async function deleteRecord(id) {\n    try {\n      await fetch(`http://localhost:5000/record/${id}`, {\n        method: \"DELETE\"\n      });\n      const newRecords = records.filter(el => el._id !== id);\n      setRecords(newRecords);\n    } catch (error) {\n      console.error(\"Error deleting record:\", error);\n      // Handle the error appropriately, e.g., show a message to the user\n    }\n  }\n\n  // This following section will display the table with the records of individuals.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Record List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: records.map(record => /*#__PURE__*/_jsxDEV(Record, {\n          record: record,\n          deleteRecord: () => deleteRecord(record._id) // You need to define deleteRecord function\n        }, record._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(RecordList, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c2 = RecordList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"RecordList\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","Record","props","children","record","name","fileName","_jsxFileName","lineNumber","columnNumber","position","level","className","to","_id","onClick","deleteRecord","_c","RecordList","_s","records","setRecords","getRecords","response","fetch","timeout","ok","message","statusText","window","alert","console","log","json","error","id","method","newRecords","filter","el","style","marginTop","map","_c2","$RefreshReg$"],"sources":["C:/Users/Isaac/Desktop/mern_stuff/client/src/components/recordList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Record = (props) => (\r\n  <tr>\r\n    <td>{props.record.name}</td>\r\n    <td>{props.record.position}</td>\r\n    <td>{props.record.level}</td>\r\n    <td>\r\n      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\r\n      <button className=\"btn btn-link\" onClick={props.deleteRecord}>\r\n        Delete\r\n      </button>\r\n    </td>\r\n  </tr>\r\n);\r\nexport default function RecordList() {\r\n const [records, setRecords] = useState([]);\r\n  // This method fetches the records from the database.\r\n  useEffect(() => {\r\n    async function getRecords() {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/record/`, {\r\n          timeout: 10000, // 10 seconds\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          const message = `An error occurred: ${response.statusText}`;\r\n          window.alert(message);\r\n          console.log(\"Something is wrong if it's coming here\");\r\n          return;\r\n        }\r\n  \r\n        console.log(\"Now attempting to await response.json\");\r\n        const records = await response.json();\r\n        console.log(\"Fetched records:\", records);\r\n        setRecords(records);\r\n      } catch (error) {\r\n        console.error(\"Request timed out or failed:\", error);\r\n        window.alert(\"Request timed out or failed. Please try again later.\");\r\n      }\r\n    }\r\n  \r\n    getRecords();\r\n  }, []); // Empty dependency array to run this effect once when the component mounts\r\n  \r\n  // This method will delete a record\r\n  async function deleteRecord(id) {\r\n    try {\r\n      await fetch(`http://localhost:5000/record/${id}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      const newRecords = records.filter((el) => el._id !== id);\r\n      setRecords(newRecords);\r\n    } catch (error) {\r\n      console.error(\"Error deleting record:\", error);\r\n      // Handle the error appropriately, e.g., show a message to the user\r\n    }\r\n }\r\n\r\n  // This following section will display the table with the records of individuals.\r\n  return (\r\n    <div>\r\n      <h3>Record List</h3>\r\n      <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Position</th>\r\n            <th>Level</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {records.map((record) => (\r\n            <Record\r\n              record={record}\r\n              deleteRecord={() => deleteRecord(record._id)} // You need to define deleteRecord function\r\n              key={record._id}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,MAAMC,MAAM,GAAIC,KAAK,iBACnBF,OAAA;EAAAG,QAAA,gBACEH,OAAA;IAAAG,QAAA,EAAKD,KAAK,CAACE,MAAM,CAACC;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,eAC5BT,OAAA;IAAAG,QAAA,EAAKD,KAAK,CAACE,MAAM,CAACM;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,eAChCT,OAAA;IAAAG,QAAA,EAAKD,KAAK,CAACE,MAAM,CAACO;EAAK;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,eAC7BT,OAAA;IAAAG,QAAA,gBACEH,OAAA,CAACF,IAAI;MAACc,SAAS,EAAC,cAAc;MAACC,EAAE,EAAG,SAAQX,KAAK,CAACE,MAAM,CAACU,GAAI,EAAE;MAAAX,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,MAC3E,eAAAT,OAAA;MAAQY,SAAS,EAAC,cAAc;MAACG,OAAO,EAAEb,KAAK,CAACc,YAAa;MAAAb,QAAA,EAAC;IAE9D;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACL;AAACQ,EAAA,GAZIhB,MAAM;AAaZ,eAAe,SAASiB,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACzC;EACAD,SAAS,CAAC,MAAM;IACd,eAAe0B,UAAUA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8B,EAAE;UAC5DC,OAAO,EAAE,KAAK,CAAE;QAClB,CAAC,CAAC;;QAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;UAChB,MAAMC,OAAO,GAAI,sBAAqBJ,QAAQ,CAACK,UAAW,EAAC;UAC3DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;UACrBI,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;UACrD;QACF;QAEAD,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;QACpD,MAAMZ,OAAO,GAAG,MAAMG,QAAQ,CAACU,IAAI,CAAC,CAAC;QACrCF,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEZ,OAAO,CAAC;QACxCC,UAAU,CAACD,OAAO,CAAC;MACrB,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDL,MAAM,CAACC,KAAK,CAAC,sDAAsD,CAAC;MACtE;IACF;IAEAR,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,eAAeN,YAAYA,CAACmB,EAAE,EAAE;IAC9B,IAAI;MACF,MAAMX,KAAK,CAAE,gCAA+BW,EAAG,EAAC,EAAE;QAChDC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMC,UAAU,GAAGjB,OAAO,CAACkB,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACzB,GAAG,KAAKqB,EAAE,CAAC;MACxDd,UAAU,CAACgB,UAAU,CAAC;IACxB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACH;;EAEC;EACA,oBACElC,OAAA;IAAAG,QAAA,gBACEH,OAAA;MAAAG,QAAA,EAAI;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBT,OAAA;MAAOY,SAAS,EAAC,qBAAqB;MAAC4B,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAE;MAAAtC,QAAA,gBAC9DH,OAAA;QAAAG,QAAA,eACEH,OAAA;UAAAG,QAAA,gBACEH,OAAA;YAAAG,QAAA,EAAI;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbT,OAAA;YAAAG,QAAA,EAAI;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBT,OAAA;YAAAG,QAAA,EAAI;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdT,OAAA;YAAAG,QAAA,EAAI;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRT,OAAA;QAAAG,QAAA,EACGiB,OAAO,CAACsB,GAAG,CAAEtC,MAAM,iBAClBJ,OAAA,CAACC,MAAM;UACLG,MAAM,EAAEA,MAAO;UACfY,YAAY,EAAEA,CAAA,KAAMA,YAAY,CAACZ,MAAM,CAACU,GAAG,CAAE,CAAC;QAAA,GACzCV,MAAM,CAACU,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACU,EAAA,CArEuBD,UAAU;AAAAyB,GAAA,GAAVzB,UAAU;AAAA,IAAAD,EAAA,EAAA0B,GAAA;AAAAC,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}