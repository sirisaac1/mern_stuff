{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaac\\\\Desktop\\\\mern_stuff\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// We use Route in order to define the different routes of our application\nimport { Route, Routes } from \"react-router-dom\";\n// We import all the components we need in our app\nimport Navbar from \"./components/navbar\";\nimport RecordList from \"./components/recordList\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\nimport SpotifyData from \"./components/spotifyData\"; //spotify API data page\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Assuming you fetch top tracks and set them in a state\n  const [topTracks, setTopTracks] = useState([]);\n\n  // Example: Fetch top tracks from your API endpoint\n  useEffect(() => {\n    const fetchTopTracks = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/', {\n          headers: {\n            Accept: 'application/json'\n          }\n        });\n        setTopTracks(response.data);\n      } catch (error) {\n        var _error$response;\n        console.error('Error fetching top tracks:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      }\n    };\n    fetchTopTracks();\n  }, []); // Run the effect only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(RecordList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/edit/:id\",\n        element: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create\",\n        element: /*#__PURE__*/_jsxDEV(Create, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/spotifyData\",\n        element: /*#__PURE__*/_jsxDEV(SpotifyData, {\n          topTracks: topTracks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 4\n  }, this);\n};\n_s(App, \"lc0lFEXh3OzYXA9KaNtp4gIhkiQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Routes","Navbar","RecordList","Edit","Create","SpotifyData","axios","jsxDEV","_jsxDEV","App","_s","topTracks","setTopTracks","fetchTopTracks","response","get","headers","Accept","data","error","_error$response","console","children","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Isaac/Desktop/mern_stuff/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// We use Route in order to define the different routes of our application\nimport { Route, Routes } from \"react-router-dom\";\n // We import all the components we need in our app\nimport Navbar from \"./components/navbar\";\nimport RecordList from \"./components/recordList\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\nimport SpotifyData from \"./components/spotifyData\";//spotify API data page\nimport axios from 'axios';\nconst App = () => {\n  // Assuming you fetch top tracks and set them in a state\n  const [topTracks, setTopTracks] = useState([]);\n\n  // Example: Fetch top tracks from your API endpoint\n  useEffect(() => {\n    const fetchTopTracks = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/', {\n          headers: {\n            Accept: 'application/json',\n          },\n        });\n        \n        setTopTracks(response.data);\n      } catch (error) {\n        console.error('Error fetching top tracks:', error.response?.data);\n      }\n    };\n\n    fetchTopTracks();\n  }, []); // Run the effect only once on component mount\n\n return (\n   <div>\n     <Navbar />\n     <Routes>\n       <Route exact path=\"/\" element={<RecordList />} />\n       <Route path=\"/edit/:id\" element={<Edit />} />\n       <Route path=\"/create\" element={<Create />} />\n       <Route path=\"/spotifyData\" element={<SpotifyData topTracks={topTracks} />} />\n     </Routes>\n   </div>\n );\n};\n export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}