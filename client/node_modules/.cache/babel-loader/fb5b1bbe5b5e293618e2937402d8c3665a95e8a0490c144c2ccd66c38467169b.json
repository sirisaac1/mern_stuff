{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Isaac/Desktop/mern_stuff/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Isaac/Desktop/mern_stuff/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Isaac/Desktop/mern_stuff/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Record=function Record(props){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:props.record.name}),/*#__PURE__*/_jsx(\"td\",{children:props.record.position}),/*#__PURE__*/_jsx(\"td\",{children:props.record.level}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(Link,{className:\"btn btn-link\",to:\"/edit/\".concat(props.record._id),children:\"Edit\"}),\" |\",/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-link\",onClick:props.deleteRecord,children:\"Delete\"})]})]});};export default function RecordList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),records=_useState2[0],setRecords=_useState2[1];// This method fetches the records from the database.\nuseEffect(function(){function getRecords(){return _getRecords.apply(this,arguments);}function _getRecords(){_getRecords=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,message,_records;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"http://localhost:5000/record/\",{timeout:10000// 10 seconds\n});case 3:response=_context.sent;if(response.ok){_context.next=9;break;}message=\"An error occurred: \".concat(response.statusText);window.alert(message);console.log(\"Something is wrong if it's coming here\");return _context.abrupt(\"return\");case 9:console.log(\"Now attempting to await response.json\");_context.next=12;return response.json();case 12:_records=_context.sent;console.log(\"Fetched records:\",_records);setRecords(_records);_context.next=21;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](0);console.error(\"Request timed out or failed:\",_context.t0);window.alert(\"Request timed out or failed. Please try again later.\");case 21:case\"end\":return _context.stop();}},_callee,null,[[0,17]]);}));return _getRecords.apply(this,arguments);}getRecords();},[]);// Empty dependency array to run this effect once when the component mounts\n// This method will delete a record\nfunction _deleteRecord2(_x){return _deleteRecord.apply(this,arguments);}// This method will map out the records on the table\nfunction _deleteRecord(){_deleteRecord=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id){var newRecords;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"http://localhost:5000/record/\".concat(id),{method:\"DELETE\"});case 3:newRecords=records.filter(function(el){return el._id!==id;});setRecords(newRecords);_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);console.error(\"Error deleting record:\",_context2.t0);// Handle the error appropriately, e.g., show a message to the user\ncase 10:case\"end\":return _context2.stop();}},_callee2,null,[[0,7]]);}));return _deleteRecord.apply(this,arguments);}function recordList(){return records.map(function(record){return/*#__PURE__*/_jsx(Record,{record:record,deleteRecord:function deleteRecord(){return _deleteRecord2(record._id);}},record._id);});}// This following section will display the table with the records of individuals.\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Record List\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped\",style:{marginTop:20},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Position\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Level\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Action\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:records.map(function(record){return/*#__PURE__*/_jsx(Record,{record:record,deleteRecord:function deleteRecord(){return _deleteRecord2(record._id);}// You need to define deleteRecord function\n},record._id);})})]})]});}","map":{"version":3,"names":["React","useEffect","useState","Link","jsx","_jsx","jsxs","_jsxs","Record","props","children","record","name","position","level","className","to","concat","_id","onClick","deleteRecord","RecordList","_useState","_useState2","_slicedToArray","records","setRecords","getRecords","_getRecords","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","message","_records","wrap","_callee$","_context","prev","next","fetch","timeout","sent","ok","statusText","window","alert","console","log","abrupt","json","t0","error","stop","_x","_deleteRecord","_callee2","id","newRecords","_callee2$","_context2","method","filter","el","recordList","map","style","marginTop"],"sources":["C:/Users/Isaac/Desktop/mern_stuff/client/src/components/recordList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Record = (props) => (\r\n  <tr>\r\n    <td>{props.record.name}</td>\r\n    <td>{props.record.position}</td>\r\n    <td>{props.record.level}</td>\r\n    <td>\r\n      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\r\n      <button className=\"btn btn-link\" onClick={props.deleteRecord}>\r\n        Delete\r\n      </button>\r\n    </td>\r\n  </tr>\r\n);\r\nexport default function RecordList() {\r\n const [records, setRecords] = useState([]);\r\n  // This method fetches the records from the database.\r\n  useEffect(() => {\r\n    async function getRecords() {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/record/`, {\r\n          timeout: 10000, // 10 seconds\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          const message = `An error occurred: ${response.statusText}`;\r\n          window.alert(message);\r\n          console.log(\"Something is wrong if it's coming here\");\r\n          return;\r\n        }\r\n  \r\n        console.log(\"Now attempting to await response.json\");\r\n        const records = await response.json();\r\n        console.log(\"Fetched records:\", records);\r\n        setRecords(records);\r\n      } catch (error) {\r\n        console.error(\"Request timed out or failed:\", error);\r\n        window.alert(\"Request timed out or failed. Please try again later.\");\r\n      }\r\n    }\r\n  \r\n    getRecords();\r\n  }, []); // Empty dependency array to run this effect once when the component mounts\r\n  \r\n  // This method will delete a record\r\n  async function deleteRecord(id) {\r\n    try {\r\n      await fetch(`http://localhost:5000/record/${id}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      const newRecords = records.filter((el) => el._id !== id);\r\n      setRecords(newRecords);\r\n    } catch (error) {\r\n      console.error(\"Error deleting record:\", error);\r\n      // Handle the error appropriately, e.g., show a message to the user\r\n    }\r\n }\r\n  // This method will map out the records on the table\r\n  function recordList() {\r\n    return records.map((record) => (\r\n      <Record\r\n        record={record}\r\n        deleteRecord={() => deleteRecord(record._id)}\r\n        key={record._id}\r\n      />\r\n    ));\r\n  }\r\n  // This following section will display the table with the records of individuals.\r\n  return (\r\n    <div>\r\n      <h3>Record List</h3>\r\n      <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Position</th>\r\n            <th>Level</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {records.map((record) => (\r\n            <Record\r\n              record={record}\r\n              deleteRecord={() => deleteRecord(record._id)} // You need to define deleteRecord function\r\n              key={record._id}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}