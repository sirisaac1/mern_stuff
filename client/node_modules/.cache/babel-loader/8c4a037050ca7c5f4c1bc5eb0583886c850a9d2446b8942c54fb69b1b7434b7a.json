{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaac\\\\Desktop\\\\mern_stuff\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// We use Route in order to define the different routes of our application\nimport { Route, Routes } from \"react-router-dom\";\n// We import all the components we need in our app\nimport Navbar from \"./components/navbar\";\nimport RecordList from \"./components/recordList\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\nimport SpotifyData from \"./components/spotifyData\"; //spotify API data page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Assuming you fetch top tracks and set them in a state\n  const [topTracks, setTopTracks] = useState([]);\n\n  // Example: Fetch top tracks from your API endpoint\n  useEffect(() => {\n    const fetchTopTracks = async () => {\n      try {\n        const response = await fetch('/spotifyData');\n        const data = await response.json();\n\n        // Assuming the data is an array, and adding a null check\n        if (Array.isArray(data) && data.length) {\n          setTopTracks(data);\n        } else {\n          console.error('Invalid or empty data format:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching top tracks:', error);\n      }\n    };\n    fetchTopTracks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(RecordList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/edit/:id\",\n        element: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create\",\n        element: /*#__PURE__*/_jsxDEV(Create, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/spotifyData\",\n        element: /*#__PURE__*/_jsxDEV(SpotifyData, {\n          topTracks: topTracks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 4\n  }, this);\n};\n_s(App, \"lc0lFEXh3OzYXA9KaNtp4gIhkiQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Routes","Navbar","RecordList","Edit","Create","SpotifyData","jsxDEV","_jsxDEV","App","_s","topTracks","setTopTracks","fetchTopTracks","response","fetch","data","json","Array","isArray","length","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Isaac/Desktop/mern_stuff/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// We use Route in order to define the different routes of our application\nimport { Route, Routes } from \"react-router-dom\";\n // We import all the components we need in our app\nimport Navbar from \"./components/navbar\";\nimport RecordList from \"./components/recordList\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\nimport SpotifyData from \"./components/spotifyData\";//spotify API data page\nconst App = () => {\n  // Assuming you fetch top tracks and set them in a state\n  const [topTracks, setTopTracks] = useState([]);\n\n  // Example: Fetch top tracks from your API endpoint\n  useEffect(() => {\n    const fetchTopTracks = async () => {\n      try {\n        const response = await fetch('/spotifyData');\n        const data = await response.json();\n\n        // Assuming the data is an array, and adding a null check\n        if (Array.isArray(data) && data.length) {\n          setTopTracks(data);\n        } else {\n          console.error('Invalid or empty data format:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching top tracks:', error);\n      }\n    };\n\n    fetchTopTracks();\n  }, []);\n\n return (\n   <div>\n     <Navbar />\n     <Routes>\n       <Route exact path=\"/\" element={<RecordList />} />\n       <Route path=\"/edit/:id\" element={<Edit />} />\n       <Route path=\"/create\" element={<Create />} />\n       <Route path=\"/spotifyData\" element={<SpotifyData topTracks={topTracks} />} />\n     </Routes>\n   </div>\n );\n};\n export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}